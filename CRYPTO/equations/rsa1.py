from Crypto.Util.number import *
import myRSA
p_q=0x14ccf48eb8da8e14e6d2bb30a9d8a42315231521da4ac74b1d0668c0f79cf9248e9b50807a3838dd8a7263fc602d273398900a59713cea04cadd77503ce8968c0
p1_q1=0x66d8b22d592ba8ce374ad3479a1832fece33f698fbbc9175aaacad81b88c6488485968e0e4331cc19bf6866b79b3da28f2363fe1e653d0fc9cd8429e9bd1dca7146e1c409ccf0b17b6d41c62ffb2697b7926b5f3c5f6dacdc4b380a2d5cda715b6ed96509fc3eeb6f574398d015cdc414602d209ce690b4c6282ef7d3ad5b8d8
e=0x10001
c=0x867d3be489389e059d9298559ef661e2121d66dbd0e968c74af31376ffb665436537b2d47b4a682141b70a3d5800759097507fc6c15bdfce184725b1aa494fb683d60c713aa900fa94f61baa31f492699377824eb4b55023a63cd474e61934ba23c4ae5fcbeec12695ce18578306a517cf405869a8f9daab6fe03af0de94e9d
pq = p1_q1-p_q-1
print(pq)

# from sympy import symbols, Eq, solve
#
# # 定义x为一个符号
# x = symbols('x')
#
# # 创建等式
# equation = Eq(x*(p_q - x), pq)
#
# # 求解x的值
# solution = solve(equation, x)
#
# # 打印结果
# print(solution)
p1 = 72221246425011449046567188933893565443113524236643767259452467406777404366608677699836810469183462898035727678221799898808073048044758886088811787507496467178753582898651272056786000771426096095173712491509090682289090525748269367787819231532052604469748234712425245274276936749478091115835748260804645638167
p = 6782528509750247544680626850229821378372509166037247658845542313024994862269311220186457848339977197097411417693785781689438268830297771806568176626038323
q = 10648130165791348173785098033928912666925063241223517297898654741673815954388929278154759379535557072479347906089146097517315220301793248822993782534271629
myRSA.pqec_4_m(p,q,e,c)